# This is a basic workflow to help you get started with Actions

name: CI

env:
  app_name: githubactionsdemo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches: 
      - main
      - feature/*
    tags:
      - v*
  pull_request:
    branches: 
      - main
  # Triggers the workflow on every Monday at 8:00 (Taiwan, UTC+8)
  schedule:
    - cron: '0 0 * * 1'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job called "build_upload"
  build_upload:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set current date as env variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Generate debug and release APK
      - name: Generate APK
        run: |
          ./gradlew assembleDebug
          ./gradlew assembleRelease

      # Generate debug and release AAB
      - name: Generate AAB
        run: |
          ./gradlew bundleDebug
          ./gradlew bundleRelease

      # Sign release APK
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      # Upload Artifact
      - name: Upload APK debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }}-${{ env.app_name }}-apkDebug
          path: app/build/outputs/apk/debug/

      - name: Upload APK release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }}-${{ env.app_name }}-apkRelease
          path: app/build/outputs/apk/release/

      - name: Upload AAB debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }}-${{ env.app_name }}-aabDebug
          path: app/build/outputs/bundle/debug/

      - name: Upload AAB release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }}-${{ env.app_name }}-aabRelease
          path: app/build/outputs/bundle/release/

  # This workflow contains a job called "release"
  release:
    runs-on: ubuntu-latest
    # Execute after build_upload finished
    needs: build_upload

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}
          # Put multiple files into the same directory
          merge-multiple: true

      # Filter files to include only those containing 'aabRelease' or 'apkRelease' in their names
      - name: Filter files
        run: |
          mkdir -p filtered_files
          find . -type f \( -name "*aabRelease*" -o -name "*apkRelease*" \) -exec cp {} filtered_files \;

      - name: Publish release
        # Execute this action if pushed tag starts with 'refs/tags/v'
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          # Allow the same tagged file updated
          allowUpdates: true
          artifacts: |
            filtered_files/*.apk
            filtered_files/*.aab
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          draft: false
          name: ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }} AAB and APK
          tag: ${{ github.ref_name }}
